version: '2.1'

# starts 4 docker containers running minio server instances. Each
# minio server's web interface will be accessible on the host at port
# 9001 through 9004.
services:
 minio1:
  image: minio/minio:$MINIO_VERSION
  container_name: "customminio1"
  volumes:
   - data1:/data
  environment:
   MINIO_ACCESS_KEY: $MINIO_ACCESS_KEY
   MINIO_SECRET_KEY: $MINIO_SECRET_KEY
  command: server data

 minio2:
  image: minio/minio:$MINIO_VERSION  
  container_name: "customminio2"
  volumes:
   - data1:/data
  environment:
   MINIO_ACCESS_KEY: $MINIO_ACCESS_KEY
   MINIO_SECRET_KEY: $MINIO_SECRET_KEY
   MINIO_BUCKET: safak
  command: server data

 minio3:
  image: minio/minio:$MINIO_VERSION
  container_name: "customminio3"
  volumes:
   - data1:/data
  environment:
   MINIO_ACCESS_KEY: $MINIO_ACCESS_KEY
   MINIO_SECRET_KEY: $MINIO_SECRET_KEY
  command: server data

 minio4:
  image: minio/minio:$MINIO_VERSION
  container_name: "customminio4"
  volumes:
   - data1:/data
  environment:
   MINIO_ACCESS_KEY: $MINIO_ACCESS_KEY
   MINIO_SECRET_KEY: $MINIO_SECRET_KEY
  command: server data


 proxy:
  image: minio-proxy
  container_name: "minioproxy"
  build:
    context: ./proxy
  ports:
    - '9000:8080'
  depends_on:
    - minio1
    - minio2
    - minio3
    - minio4
  links:
    - minio1:minio_1
    - minio2:minio_2
    - minio3:minio_3
    - minio4:minio_4
  # networks:
  #   - minionetwork
## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  data1:
    driver: local
    driver_opts:
      type: none
      device: /Users/temel/Desktop/MiniData
      o: bind

# networks:
#   minionetwork:
#     driver: bridge